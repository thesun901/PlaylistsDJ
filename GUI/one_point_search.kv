#:import Factory kivy.factory.Factory


<OnePointSearchLayout>:
    FloatLayout:
        size: root.width, root.height
        canvas.before:
            Color:
                rgba: 0.1, 0.1, 0.1, 1
            Rectangle:
                pos: self.pos
                size: self.size

        Label:
            pos_hint: {"center_x": 0.5, "center_y": 0.94}
            size_hint: 0.2, 0.2
            text: "Find songs closest to choosen parameters"
            font_size: 28
            bold: True
            color: 0.9, 0.25, 0.9, 1

        Label:
            pos_hint: {"center_x": 0.2, "center_y": 0.85}
            size_hint: 0.2, 0.2
            text: "Loudness"

        CheckBox:
            id: loudness_checkbox
            pos_hint: {"center_x": 0.1, "center_y": 0.8}
            size_hint: 0.05, 0.05
            active: True
            background_checkbox_down: app.resource_path("pictures/checkbox_down.png")
            background_checkbox_normal: app.resource_path("pictures/checkbox_normal.png")
            on_release:
                root.update_states()

        Slider:
            id: loudness_slider
            padding: 0
            cursor_size: 20, 20
            cursor_image: "pictures/slider_cursor.png"
            value_track: True
            value_track_color: (0.9, 0.25, 0.9, 1) if self.disabled == False else (0.25, 0.25, 0.25, 1)
            background_horizontal: app.resource_path("pictures/black.png")
            cursor_disabled_image: app.resource_path("pictures/no_image.png")
            background_width: 5
            pos_hint: {"center_x": 0.3, "center_y": 0.8}
            size_hint: 0.3, 0.1
            min: 0
            max: 1
            step: 0.01
            orientation: 'horizontal'
            value: 0.5

        Label:
            pos_hint: {"center_x": 0.2, "center_y": 0.75}
            size_hint: 0.2, 0.2
            text: "Energy"

        CheckBox:
            id: energy_checkbox
            pos_hint: {"center_x": 0.1, "center_y": 0.7}
            size_hint: 0.05, 0.05
            active: True
            background_checkbox_down: app.resource_path("pictures/checkbox_down.png")
            background_checkbox_normal: app.resource_path("pictures/checkbox_normal.png")
            on_release:
                root.update_states()
        Slider:
            id: energy_slider
            padding: 0
            cursor_size: 20, 20
            cursor_image: "pictures/slider_cursor.png"
            value_track: True
            value_track_color: (0.9, 0.25, 0.9, 1) if self.disabled == False else (0.25, 0.25, 0.25, 1)
            background_horizontal: app.resource_path("pictures/black.png")
            cursor_disabled_image: app.resource_path("pictures/no_image.png")
            background_width: 5
            pos_hint: {"center_x": 0.3, "center_y": 0.7}
            size_hint: 0.3, 0.1
            min: 0
            max: 1
            step: 0.01
            orientation: 'horizontal'
            value: 0.5
        Label:
            pos_hint: {"center_x": 0.2, "center_y": 0.65}
            size_hint: 0.2, 0.2
            text: "Instrumentalness"

        CheckBox:
            id: instrumentalness_checkbox
            pos_hint: {"center_x": 0.1, "center_y": 0.6}
            size_hint: 0.05, 0.05
            active: True
            background_checkbox_down: app.resource_path("pictures/checkbox_down.png")
            background_checkbox_normal: app.resource_path("pictures/checkbox_normal.png")
            on_release:
                root.update_states()
        Slider:
            id: instrumentalness_slider
            padding: 0
            cursor_size: 20, 20
            cursor_image: "pictures/slider_cursor.png"
            value_track: True
            value_track_color: (0.9, 0.25, 0.9, 1) if self.disabled == False else (0.25, 0.25, 0.25, 1)
            background_horizontal: app.resource_path("pictures/black.png")
            cursor_disabled_image: app.resource_path("pictures/no_image.png")
            background_width: 5
            pos_hint: {"center_x": 0.3, "center_y": 0.6}
            size_hint: 0.3, 0.1
            min: 0
            max: 1
            step: 0.01
            orientation: 'horizontal'
            value: 0.5

        Label:
            pos_hint: {"center_x": 0.2, "center_y": 0.55}
            size_hint: 0.2, 0.2
            text: "Tempo"

        CheckBox:
            id: tempo_checkbox
            pos_hint: {"center_x": 0.1, "center_y": 0.5}
            size_hint: 0.05, 0.05
            active: True
            background_checkbox_down: app.resource_path("pictures/checkbox_down.png")
            background_checkbox_normal: app.resource_path("pictures/checkbox_normal.png")
            on_release:
                root.update_states()
        Slider:
            id: tempo_slider
            padding: 0
            cursor_size: 20, 20
            cursor_image: "pictures/slider_cursor.png"
            value_track: True
            value_track_color: (0.9, 0.25, 0.9, 1) if self.disabled == False else (0.25, 0.25, 0.25, 1)
            background_horizontal: app.resource_path("pictures/black.png")
            cursor_disabled_image: app.resource_path("pictures/no_image.png")
            background_width: 5
            pos_hint: {"center_x": 0.3, "center_y": 0.5}
            size_hint: 0.3, 0.1
            min: 0
            max: 1
            step: 0.01
            orientation: 'horizontal'
            value: 0.5

        Label:
            pos_hint: {"center_x": 0.2, "center_y": 0.45}
            size_hint: 0.2, 0.2
            text: "Valence"

        CheckBox:
            id: valence_checkbox
            pos_hint: {"center_x": 0.1, "center_y": 0.4}
            size_hint: 0.05, 0.05
            active: True
            background_checkbox_down: app.resource_path("pictures/checkbox_down.png")
            background_checkbox_normal: app.resource_path("pictures/checkbox_normal.png")
            on_release:
                root.update_states()

        Slider:
            id: valence_slider
            padding: 0
            cursor_size: 20, 20
            cursor_image: "pictures/slider_cursor.png"
            value_track: True
            value_track_color: (0.9, 0.25, 0.9, 1) if self.disabled == False else (0.25, 0.25, 0.25, 1)
            background_horizontal: app.resource_path("pictures/black.png")
            cursor_disabled_image: app.resource_path("pictures/no_image.png")
            background_width: 5
            pos_hint: {"center_x": 0.3, "center_y": 0.4}
            size_hint: 0.3, 0.1
            min: 0
            max: 1
            step: 0.01
            orientation: 'horizontal'
            value: 0.5

        Label:
            pos_hint: {"center_x": 0.2, "center_y": 0.35}
            size_hint: 0.2, 0.2
            text: "Danceability"

        CheckBox:
            id: danceability_checkbox
            pos_hint: {"center_x": 0.1, "center_y": 0.3}
            size_hint: 0.05, 0.05
            active: True
            background_checkbox_down: app.resource_path("pictures/checkbox_down.png")
            background_checkbox_normal: app.resource_path("pictures/checkbox_normal.png")
            on_release:
                root.update_states()

        Slider:
            id: danceability_slider
            padding: 0
            cursor_size: 20, 20
            cursor_image: "pictures/slider_cursor.png"
            value_track: True
            value_track_color: (0.9, 0.25, 0.9, 1) if self.disabled == False else (0.25, 0.25, 0.25, 1)
            background_horizontal: app.resource_path("pictures/black.png")
            cursor_disabled_image: app.resource_path("pictures/no_image.png")
            background_width: 5
            pos_hint: {"center_x": 0.3, "center_y": 0.3}
            size_hint: 0.3, 0.1
            min: 0
            max: 1
            step: 0.01
            orientation: 'horizontal'
            value: 0.5

        Label:
            text: "percentage of playlist returned"
            font_size: 20
            pos_hint: {"center_x": 0.7, "center_y": 0.65}
            size_hint: 0.2, 0.2
            valign: "center"
            halign: "center"


        Label:
            id: percentage_label
            font_size: 40
            color: (0.9, 0.25, 0.9, 1)
            pos_hint: {"center_x": 0.7, "center_y": 0.5}
            size_hint: 0.2, 0.2
            valign: "center"
            halign: "center"

        Slider:
            id: percentage_slider
            padding: 0
            cursor_size: 20, 20
            cursor_image: "pictures/slider_cursor.png"
            value_track: True
            value_track_color: (0.9, 0.25, 0.9, 1) if self.disabled == False else (0.25, 0.25, 0.25, 1)
            background_horizontal: app.resource_path("pictures/black.png")
            cursor_disabled_image: app.resource_path("pictures/no_image.png")
            background_width: 5
            pos_hint: {"center_x": 0.7, "center_y": 0.3}
            size_hint: 0.4, 0.1
            min: 0.01
            max: 0.33
            step: 0.01
            orientation: 'horizontal'
            value: 0.15
            on_touch_move:
                root.update_states()
            on_touch_up:
                root.update_states()

        Button:
            text: "Back"
            pos_hint: {"center_x": 0.4, "center_y": 0.1}
            size_hint: 0.14, 0.08
            background_color: 0,0,0,0
            bold: True
            color: 1, 1, 1, 1
            canvas.before:
                Color:
                    rgba: (0.5, 0.5, 0.5, 1) if self.state=='normal' else (0,.7,.7,1)
                RoundedRectangle:
                    pos: self.pos
                    size: self.size
                    radius: [25,]
            on_release:
                root.manager.transition.direction = "right"
                app.root.current = "player"

        Button:
            text: "Add to queue"
            pos_hint: {"center_x": 0.6, "center_y": 0.1}
            size_hint: 0.15, 0.08
            background_color: 0,0,0,0
            bold: True
            color: 1, 1, 1, 1
            canvas.before:
                Color:
                    rgba: (0.9, 0.25, 0.9, 1) if self.state=='normal' else (0,.7,.7,1)
                RoundedRectangle:
                    pos: self.pos
                    size: self.size
                    radius: [25,]
            on_release:
                root.apply_one_point_search()
                root.manager.transition.direction = "right"
                app.root.current = "player"


